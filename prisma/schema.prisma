// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  projects  Project[]  // One-to-many relation with Project
  tasks     Task[]     @relation("AssignedTasks")

  @@map("users")
}

model Project {
  id          String   @id @default(uuid()) @db.Uuid
  name        String
  description String
  status      ProjectStatus
  createdAt   DateTime @default(now())
  userId      String   @db.Uuid   // Make sure this is UUID to match User's id
  user        User     @relation(fields: [userId], references: [id])

  tasks       Task[]

  @@map("projects")

}

model Task {
  id             String       @id @default(uuid()) @db.Uuid
  title          String
  description    String
  status         TaskStatus
  createdAt      DateTime     @default(now())
  projectId      String       @db.Uuid
  project        Project      @relation(fields: [projectId], references: [id])
  assignedUserId String       @db.Uuid
  assignedUser   User         @relation("AssignedTasks", fields: [assignedUserId], references: [id])

  @@map("tasks")

}

enum ProjectStatus {
  PLANNED
  ONGOING
  COMPLETED
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

